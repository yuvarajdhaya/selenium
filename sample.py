# Generated by Selenium IDE
#import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

class TestEvidenceadded():
	def setup_method(self):
		self.driver = webdriver.Chrome()
		self.driver.implicitly_wait(2) # seconds
		with open('config/config.json','r') as f:
			data=json.load(f)
		print(data)
		self.Username=data['username']
		self.Password=data['password']
		self.URL=data['url']
		print(self.Username,self.Password,self.URL)

	def loadingwait(self):
		xpath =  '//div[@class="spinner-three-bounce ng-star-inserted"]'
		WebDriverWait(self.driver,20, poll_frequency=0.5).until_not(EC.presence_of_element_located((By.XPATH,xpath)))

	def teardown_method(self):
		self.driver.quit()
	def login(self):
		self.driver.get(self.URL)
		self.driver.set_window_size(1315, 744)
		self.driver.find_element(By.XPATH, "//input[@type='email']").send_keys(self.Username)
		self.driver.find_element(By.CSS_SELECTOR, ".form-group > .ai3-brand-input").click()
		self.driver.find_element(By.XPATH, "//input[@type='password']").send_keys(self.Password)
		self.driver.find_element(By.CSS_SELECTOR, ".ui-button-text").click()
		time.sleep(5)
		self.loadingwait()
	# def condition_check(self):

	def Evidence_added(self):
		self.login()
		####start audit########################

		# self.driver.find_element(By.XPATH, "(//span[@class = 'ui-button-text ui-clickable'])[3]").click()
		# self.loadingwait()
		# #Report name
		# self.driver.find_element(By.XPATH, "//input[@formcontrolname='report_name']").send_keys("Soc2-new")
		# self.loadingwait()
		# #Report type drop-down
		# self.driver.find_element(By.XPATH, "//label[text()='Select Type']").click()
		# #report type
		# self.driver.find_element(By.XPATH, "//span[text()='SOC 2']").click()
		# self.loadingwait()
		# #date option click
		# self.driver.find_element(By.XPATH, "//input[@placeholder='Select Date']").click()
		# self.loadingwait()
		# #start date selection
		# self.driver.find_element(By.XPATH, "//span[@class='owl-dt-calendar-cell-content owl-dt-calendar-cell-today']").click()
		# #End date
		# self.driver.find_element(By.XPATH, "//span[@class='owl-dt-calendar-cell-content owl-dt-calendar-cell-out']").click()
		# #Set date
		# self.driver.find_element(By.XPATH, "(//span[@class='owl-dt-control-content owl-dt-control-button-content'])[5]").click()
		# #Set auditor dropdown
		# self.driver.find_element(By.XPATH, "//label[text()='Select Auditor Name']").click()
		# self.loadingwait()
		# #Set first auditor
		# self.driver.find_element(By.XPATH, "//li[@style=''][2]").click()
		# #Set All TCS category
		# self.driver.find_element(By.XPATH, "//span[text()='Select All']").click()
		# #Create new audit button
		# self.driver.find_element(By.XPATH, "//span[text()='Create New Report']").click()
		# self.loadingwait()
		# time.sleep(5)

		#####      Audit creation Done     #########################

		###Details click
		self.driver.find_element(By.CSS_SELECTOR, ".p-grid:nth-child(2) .ui-button-text").click()
		self.loadingwait()

		list_of_cs=[]
		list_of_criteria=[]
		No_cs=len(self.driver.find_elements(By.XPATH, "//div[@class='lable_style']"))
		print("No of cs =",No_cs)
		# for i in range(No_cs):
		# 	Cs_name=self.driver.find_element(By.XPATH,"(//div[@class='lable_style'])[{}]".format(i+1)).text
		# 	list_of_cs.append(Cs_name)
		# print (list_of_cs)
		No_cs=len(self.driver.find_elements(By.XPATH, "//div[@class='lable_style']"))
		for i in range(No_cs):
			Cs_name=self.driver.find_element(By.XPATH,"(//div[@class='lable_style'])[{}]".format(i+1)).text
			list_of_cs.append(Cs_name)
#		print (list_of_cs)

		for i in list_of_cs:
			cs_status=self.driver.find_element(By.XPATH,"//div[@id='main-compliance-div']//div[@id]//div[@class='lable_style' and contains(text(), '{}')]/parent::div/parent::div/div[3]//span[contains(@class,'text_wrap')]".format(i)).text
			print("CS status = ",cs_status)
			if cs_status in ['Assigned','Pending Assignment']:
				self.driver.find_element(By.XPATH,"//div[contains(text(),'{}')]//i".format(i)).click()
				self.loadingwait()
			


		# for i in range(No_cs):
		# 	cs_status=self.driver.find_element(By.XPATH,"(//div[@id = 'cs{}']//span[contains(@class,'value_style')])[2]".format(i+1)).text
		# 	print("CS status = ",cs_status)
		# 	if cs_status in ['Assigned','Pending Assignment']:
		# 		self.driver.find_element(By.XPATH,"(//div[@class='lable_style'])[{}]//i".format(i+1)).click()
		# 		self.loadingwait()
			else:
				print("The CS is disabled ",i)


					# element = self.driver.find_element(By.XPATH, "//*[@id='status0']")
					# actions = ActionChains(self.driver)
					# actions.move_to_element(element).perform()
					# self.driver.find_element(By.XPATH, "//span[text()='View']").click()
					# self.loadingwait()
					# self.driver.find_element(By.XPATH, "(//span[text()='Ready for Auditor Review '])[2]//i").click()
					# self.loadingwait()
					# self.driver.find_element(By.XPATH, "(//span[text()='Ready for CC Review'])[2]").click()
					# self.loadingwait()
					# # time.sleep(10)
					# # self.driver.find_element(By.XPATH, "//div[contains(@class,'ui-dialog-content ui-widget-content')]//i[contains(@class,'fa-chevron-down')]").click()
					# # self.driver.find_element(By.CSS_SELECTOR,"#devices-tab-body > li:nth-child(3) > span:nth-child(1) > span:nth-child(1) > i:nth-child(1)").click()
					# # self.loadingwait()
					# # self.driver.find_element(By.XPATH, "//span[text()='Ready for Auditor Review']").click()
					# # self.loadingwait()
					# self.driver.find_element(By.XPATH, "//span[text()='Close']").click()
					# self.loadingwait()
					# element = self.driver.find_element(By.XPATH, "//*[@id='status0']")
					# actions = ActionChains(self.driver)
					# actions.move_to_element(element).perform()
					# self.driver.find_element(By.XPATH, "(//span[text()='Ready for CC Review '])//i").click()
					# self.loadingwait()
					# self.driver.find_element(By.XPATH, "//span[text()='Ready for Auditor Review']").click()
					# self.loadingwait()


############### Audit complete   ###############################




test=TestEvidenceadded()
test.setup_method()
test.Evidence_added()
test.teardown_method()
